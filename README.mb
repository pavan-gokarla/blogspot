Blog Management API
Overview
This project is a comprehensive API for managing a blog platform. It leverages Django and Django REST Framework to provide endpoints for creating, updating, deleting, and retrieving blog posts. The API also supports functionalities like liking/unliking blogs, adding tags, and filtering blogs based on tags or user preferences.




Features
User Authentication: Ensures that only logged-in users can perform certain actions.
Blog Management: Create, update, delete, and retrieve blog posts.
Tag Management: Add and retrieve tags associated with blog posts.
Like/Unlike Blogs: Users can like or unlike blog posts.
Pagination: Paginate blog lists for better performance and user experience.
Filter and Sorting: Filter blogs by tags and sort by likes.
Media and Code Handling: Upload media files and add code snippets to blog posts.




Blog Endpoints
GET /blogs: Retrieve a list of blogs with optional filters (tags, user-specific blogs, removed blogs) and sorting (by likes).
GET /blogs/{blog_id}: Retrieve a specific blog by its ID.
POST /blogs: Create a new blog post.
PATCH /blogs/{blog_id}: Update an existing blog post.
DELETE /blogs/{blog_id}: Delete a blog post or mark it as removed.
POST /blogs/{blog_id}/like: Like a specific blog post.
POST /blogs/{blog_id}/unlike: Unlike a specific blog post.


Tag Endpoints
GET /tags: Retrieve all available tags.
POST /tags: Create a new tag.


Installation
Clone the repository:
git clone https://github.com/yourusername/blog-management-api.git
cd blog-management-api

Install dependencies:
pip install -r requirements.txt

Run migrations:
python manage.py migrate

Create a superuser:
python manage.py createsuperuser
Run the development server:
python manage.py runserver




Usage
Use a tool like Postman or cURL to interact with the API endpoints.
Ensure that you include appropriate authentication tokens in the headers for endpoints that require user authentication.
Contributing
Fork the repository.
Create a new branch (git checkout -b feature-branch).
Make your changes and commit them (git commit -am 'Add new feature').
Push to the branch (git push origin feature-branch).
Create a new Pull Request.
